{"ast":null,"code":"var _jsxFileName = \"/home/sony/Desktop/affan/starWars/StarWar/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [MovieList, setListState] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [Error, setError] = useState('');\n  const fetchMoviesHandler = e => {\n    setIsLoading(true);\n    fetch('https://swapi.dev/api/film').then(obj => obj.json()).then(obj => obj.results).then(obj => {\n      console.log(obj);\n      let newObj = [];\n      obj.map(ele => newObj.push(ele));\n      setListState([...newObj]); //here I created a new blank array and destructured \n      //newObj array because if i assign the newObj to state directly both newObj and state \n      // object will point to same object\n      setIsLoading(false);\n    }).catch(ele => {\n      setIsLoading(false);\n      setError('Something went wrong....');\n    });\n    console.log(MovieList);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && MovieList.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: MovieList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 48\n      }, this), isLoading && !Error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 33\n      }, this), !isLoading && !Error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: Error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 34\n      }, this), !isLoading && MovieList.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2OalKbMYeC3YeHhsK3rTSz/Q0gE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","App","MovieList","setListState","isLoading","setIsLoading","Error","setError","fetchMoviesHandler","e","fetch","then","obj","json","results","console","log","newObj","map","ele","push","catch","length"],"sources":["/home/sony/Desktop/affan/starWars/StarWar/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [MovieList, setListState] = useState([]);\n  const [ isLoading, setIsLoading ] = useState(false);\n  const [Error, setError] = useState('');\n\n  const fetchMoviesHandler = (e) =>{\n    setIsLoading(true);\n    fetch('https://swapi.dev/api/film')\n    .then((obj)=>obj.json())\n    .then((obj)=>obj.results)\n    .then((obj)=>{\n      console.log(obj);\n      let newObj = [];\n      obj.map((ele)=>newObj.push(ele));\n      setListState([...newObj]); //here I created a new blank array and destructured \n      //newObj array because if i assign the newObj to state directly both newObj and state \n      // object will point to same object\n      setIsLoading(false);\n    })\n    .catch((ele)=>{\n      setIsLoading(false);\n      setError('Something went wrong....');\n    });\n    console.log(MovieList);\n  }\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && MovieList.length > 0 && <MoviesList movies={MovieList}></ MoviesList> }\n        {isLoading && !Error && <p>Loading....</p>}\n        {!isLoading && !Error && <p>{Error}</p> }\n        {!isLoading && MovieList.length === 0 && <p>No movies found</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAEK,SAAS,EAAEC,YAAY,CAAE,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,kBAAkB,GAAIC,CAAC,IAAI;IAC/BJ,YAAY,CAAC,IAAI,CAAC;IAClBK,KAAK,CAAC,4BAA4B,CAAC,CAClCC,IAAI,CAAEC,GAAG,IAAGA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAAEC,GAAG,IAAGA,GAAG,CAACE,OAAO,CAAC,CACxBH,IAAI,CAAEC,GAAG,IAAG;MACXG,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC;MAChB,IAAIK,MAAM,GAAG,EAAE;MACfL,GAAG,CAACM,GAAG,CAAEC,GAAG,IAAGF,MAAM,CAACG,IAAI,CAACD,GAAG,CAAC,CAAC;MAChChB,YAAY,CAAC,CAAC,GAAGc,MAAM,CAAC,CAAC,CAAC,CAAC;MAC3B;MACA;MACAZ,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDgB,KAAK,CAAEF,GAAG,IAAG;MACZd,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAAC,0BAA0B,CAAC;IACtC,CAAC,CAAC;IACFQ,OAAO,CAACC,GAAG,CAACd,SAAS,CAAC;EACxB,CAAC;EACD,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb;MAAA,uBACE;QAAQ,OAAO,EAAEM,kBAAmB;QAAA,UAAC;MAAY;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QAClD,eACV;MAAA,WACG,CAACJ,SAAS,IAAIF,SAAS,CAACoB,MAAM,GAAG,CAAC,iBAAI,QAAC,UAAU;QAAC,MAAM,EAAEpB;MAAU;QAAA;QAAA;QAAA;MAAA,QAAe,EACnFE,SAAS,IAAI,CAACE,KAAK,iBAAI;QAAA,UAAG;MAAW;QAAA;QAAA;QAAA;MAAA,QAAI,EACzC,CAACF,SAAS,IAAI,CAACE,KAAK,iBAAI;QAAA,UAAIA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,EACtC,CAACF,SAAS,IAAIF,SAAS,CAACoB,MAAM,KAAK,CAAC,iBAAI;QAAA,UAAG;MAAe;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACvD;EAAA;IAAA;IAAA;IAAA;EAAA,QACK;AAErB;AAAC,GAtCQrB,GAAG;AAAA,KAAHA,GAAG;AAwCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}